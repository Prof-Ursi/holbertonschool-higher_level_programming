===========================
1. MyList Test
===========================

This is a doctest file designed to test the MyList(text) function in Python. 
It provides both correct and incorrect cases on how to use this function.

Import module:
==============
    >>> MyList = __import__('1-my_list').MyList

Description :
=============
    Imitates the 'list' python method by inheritance.

Requirements :
==============
Write a class MyList that inherits from list:
    - Public instance method: def print_sorted(self): that prints the list, but sorted (ascending sort)
    - You can assume that all the elements of the list will be of type int
    - You are not allowed to import any module

Correct Cases to Test :
=======================

Basic list:
    >>> my_list = MyList([8, 6, 4, 2])
    >>> print(my_list)
    [8, 6, 4, 2]
    >>> my_list.print_sorted()
    [2, 4, 6, 8]
    >>> my_list.append(10)
    >>> print(my_list)
    [8, 6, 4, 2, 10]
    >>> my_list.print_sorted()
    [2, 4, 6, 8, 10]

Empty list:
    >>> empty_list = MyList()
    >>> empty_list.print_sorted()
    []

List with duplicate elements:
    >>> my_list = MyList([8, 6, 4, 2, 2, 4, 6, 8])
    >>> print(my_list)
    [8, 6, 4, 2, 2, 4, 6, 8]
    >>> my_list.print_sorted()
    [2, 2, 4, 4, 6, 6, 8, 8]

List with negative and positive number:
    >>> my_list = MyList([-2, -4, -6, -8, 2, 4, 6, 8])
    >>> print(my_list)
    [-2, -4, -6, -8, 2, 4, 6, 8]
    >>> my_list.print_sorted()
    [-8, -6, -4, -2, 2, 4, 6, 8]

List with strings:
    >>> str_list = MyList(["Delta", "Beta", "Gamma", "Alpha"])
    >>> print(str_list)
    ['Delta', 'Beta', 'Gamma', 'Alpha']
    >>> str_list.print_sorted()
    ['Alpha', 'Beta', 'Delta', 'Gamma']


Incorrect Cases to test :
=========================

List of mixed data types:
    >>> mixed_list = MyList([42, "Alpha", 3.14, True])
    >>> print(mixed_list)
    [42, 'Alpha', 3.14, True]
    >>> mixed_list.print_sorted()
    Traceback (most recent call last):
    TypeError: '<' not supported between instances of 'str' and 'int'
